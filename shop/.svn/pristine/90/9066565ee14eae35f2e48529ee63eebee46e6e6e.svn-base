<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
    <class name="cn.it.shop.model.Category" table="category" catalog="shop">
        <id name="id" type="java.lang.Integer">
            <column name="id" />
            <generator class="native" />
        </id>
        <property name="type" type="java.lang.String">
            <column name="type" length="20" />
        </property>
        <property name="hot" type="java.lang.Boolean">
            <column name="hot" />
        </property>
        <!-- 配多对一关系，配置外键，设级联查询(lazy="false") 
        	hibernate N+1问题：首先发出一条语句查询当前对象，然后发出N条语句查询关联对象，N不确定，因此效率比较低
        	lazy:是否加载关联对象，如果为false则及时加载
        	fetch:什么样的方式加载关联对象，可以选择select(默认是select,select是通过select语句一条条查)或join（通过join方式一次性查出来）
        	注意在many-to-one的情况下，join无效
        	N+1解决方案：自己写HQL语句取代基于xml的配置，则可以提升性能。（查询语句一定要自己写）
        	在任何的情况下，不需要配置   lazy="false" fetch="join"
        -->
        <!-- 
        <many-to-one name="account" class="cn.it.shop.model.Account" lazy="false" fetch="join">
        	<column name="aid"/>
        </many-to-one> 
        -->
        <!-- 在任何的情况下，不需要配置   lazy="false" fetch="join" -->
        <many-to-one name="account" class="cn.it.shop.model.Account">
        	<column name="aid"/>
        </many-to-one> 
    </class>
</hibernate-mapping>
